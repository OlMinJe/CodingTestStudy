// 큰 수 만들기

/**
 * ✏️ 문제 개요
 * - 숫자 문자열에서 k개의 수를 제거하여 가장 큰 수를 만드는 문제
 *
 * ✏️ 목표
 * - k개의 숫자를 제거한 뒤 만들 수 있는 가장 큰 수를 문자열로 반환
 *
 * ✏️ 해결 전략 (탐욕법 + 스택)
 * 1. 앞에서부터 한 글자씩 탐색
 * 2. 스택에 넣되, 이전 숫자보다 크면 작은 수를 pop하여 제거
 * 3. k번 제거했으면 더 이상 제거 안 함
 * 4. 순회 후 k가 남아있다면 뒤에서 제거
 */

// ✅ 기본 풀이
function solution(number, k) {
  const stack = [];

  for (let digit of number) {
    // 현재 숫자가 스택의 top보다 크면 이전 숫자를 제거 (k 감소)
    while (k > 0 && stack.length > 0 && stack[stack.length - 1] < digit) {
      stack.pop();
      k--;
    }
    stack.push(digit); // 현재 숫자 push
  }

  // 아직 제거할 수가 남아 있다면 뒤에서 제거
  return stack.slice(0, stack.length - k).join('');
}

/**📖 풀이과정
 *
 * 0️⃣ 스택 초기화
 * - 숫자를 순차적으로 저장할 배열 stack을 선언
 *
 * 1️⃣ 앞에서부터 순회하면서 숫자 선택
 * - 현재 숫자가 스택 top보다 크고, k > 0이면
 *   → 작은 수 제거(pop), k 감소
 * - 반복 조건 만족하지 않으면 현재 숫자 push
 *
 * 2️⃣ 순회 완료 후 k가 남아 있다면
 * - 예: 전체가 내림차순이면 위 조건에서 아무것도 제거되지 않음
 * - 이 경우 뒤에서 k개를 잘라냄 (가장 오른쪽 숫자부터 제거)
 *
 * 3️⃣ 최종 결과 반환
 * - stack의 앞에서부터 남은 숫자를 join하여 문자열로 반환
 */
