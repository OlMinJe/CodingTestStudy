// 완주하지 못한 선수

/** ✏️ 목표
 * - 마라톤에 참가한 사람 중 '완주하지 못한 사람'을 찾아 반환하기
 * - 이름은 중복 가능하며, 오직 한 명만 완주하지 못함
 *
 * ► 예상 로직
 * 1. 참가자 이름들을 해시맵에 등장 횟수로 저장
 * 2. 완주자 이름이 등장할 때마다 카운트를 감소
 * 3. 최종적으로 카운트가 1 남은 사람이 완주하지 못한 사람
 */

// 기존코드
function solution(participant, completion) {
  const map = new Map(); // 이름 → 등장 횟수

  // 1️⃣ 참가자 수 카운팅
  participant.forEach((name) => map.set(name, (map.get(name) || 0) + 1));
  // 2️⃣ 완주자 수 차감
  completion.forEach((name) => map.set(name, map.get(name) - 1));
  // 3️⃣ 카운트가 남아 있는 사람이 완주 못한 사람
  for (const [name, count] of map.entries()) {
    if (count > 0) return name;
  }
}

/**
 * 📖 풀이 과정 설명
 * 1️⃣ 참가자 수 카운팅
 * - Map을 사용해 각 이름별로 등장 횟수를 저장합니다.
 * - 중복된 이름도 정확하게 처리하기 위해 해시맵을 사용합니다.
 * - (map.get(name) || 0) + 1 패턴은 초기값이 없을 때 0부터 시작하도록 합니다.
 *
 * 2️⃣ 완주자 수 차감
 * - 완주자 리스트를 순회하면서 해당 이름의 수를 1씩 줄입니다.
 * - 완주한 사람은 수가 줄어들어 0이 됩니다.
 *
 * 3️⃣ 남은 값 찾기
 * - Map.entries()를 통해 [name, count] 쌍을 순회합니다.
 * - 카운트가 남은 사람은 완주하지 못했음을 의미하므로 바로 반환합니다.
 */
