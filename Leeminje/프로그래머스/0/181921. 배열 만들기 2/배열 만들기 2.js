const solution = (l, r) => {
    let arr = [];
    let val;

    /**
    * < 범위 내에서 가장 큰 값 "555,555"를 활용하기 >
    * [1]
    * '555555(10)'에서 5를 1로, 0을 0으로 취급하면, '111111(10)'로 표현할 수 있다.
    * 🩵 '111111(10) * 5(10) = 555555(10)'라서 나중에 '5(10)'를 추가적으로 곱해주면 된다.
    * [2]
    * 반복문의 범위를 설정하기 위해, 10진수를 2진수로 변환하는 것이 아닌
    * '111111(10)'을 '1111111(2)'로 해석하여 사용한다.
    * [3]
    * '111111(2)'을 10진수로 변환하면 '63(10)'이 나온다.
    * 🩵 '111111(10) * 5(10) = 555555(10)'라서 나중에 '5(10)'를 추가적으로 곱해주면 된다.
    * [4]
    * '63'이라는 범위 내에서 반복문을 돌린다.
    */
    for (let i = 1; i <= 63; i++) {
        /**
        * [5]
        * i를 2진수로 변환 후 '5'를 곱해준다. (🩵 i가 '3'인 경우는 = '3(10)' > '11(2)' > '11(10)')
        * 이때 '11(2)'은 String이기 때문에 숫자로 해석하여, '5'를 곱해줘야 한다.
        */
        val = Number(i.toString(2)) * 5;
        if (val >= l && val <= r) {
            arr.push(val);
        }
    }
    return arr.length > 0 ? arr : [-1];
}
