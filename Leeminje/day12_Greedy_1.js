// 구명보트

/**
 * ✏️ 문제 개요
 * - 사람들의 몸무게 목록과 보트 무게 제한이 주어질 때
 *   모든 사람을 구출하기 위해 필요한 최소 보트 수를 구하는 문제
 *
 * ✏️ 목표
 * - 한 보트에는 최대 2명만 탈 수 있고, 무게 합이 limit 이하일 때만 함께 탈 수 있음
 * - 최소한의 보트 개수를 반환
 *
 * ✏️ 해결 전략 (탐욕법 + 투 포인터)
 * 1. 몸무게 오름차순 정렬
 * 2. 가장 가벼운 사람(left) + 가장 무거운 사람(right)부터 조합
 *    - 두 사람의 합이 limit 이하이면 둘을 함께 태우고 left++ / right--
 *    - 아니라면 무거운 사람만 혼자 태우고 right-- (left는 그대로)
 * 3. 보트를 한 대 사용했으므로 boats++ (모든 루프에서 1 증가)
 * 4. left > right가 될 때까지 반복
 */

function solution(people, limit) {
  // 0️⃣ 몸무게 오름차순 정렬
  people.sort((a, b) => a - b);

  let left = 0; // 가장 가벼운 사람의 인덱스
  let right = people.length - 1; // 가장 무거운 사람의 인덱스
  let boats = 0; // 필요한 보트 수

  // 1️⃣ 투 포인터로 양쪽에서 탐색
  while (left <= right) {
    // 2️⃣ 두 사람의 무게 합이 limit 이하라면 둘이 같이 탑승
    if (left !== right && people[left] + people[right] <= limit) {
      left++; // 가벼운 사람도 탑승
    }
    // 3️⃣ 무거운 사람은 항상 태움
    right--;
    // 4️⃣ 보트 사용
    boats++;
  }

  // 5️⃣ 최소 보트 개수 반환
  return boats;
}

/**📖 풀이 과정
 *
 * 0️⃣ 정렬
 * - 가벼운 사람과 무거운 사람을 양쪽 끝에서 선택하기 위해 오름차순 정렬
 *
 * 1️⃣ 조합 시도
 * - 가장 무거운 사람과 가장 가벼운 사람의 합이 limit 이하라면
 *   두 사람을 같이 태우는 것이 최적 (탐욕적 선택)
 *
 * 2️⃣ 조건 불충족 시
 * - limit을 초과하면 무거운 사람만 혼자 보냄 (right--)
 *
 * 3️⃣ 보트 카운트
 * - 루프 한 번마다 보트 한 대 사용
 *
 * 4️⃣ left > right가 되면 모든 사람이 구출 완료
 *
 * 5️⃣ 결과 반환
 * - 최소 보트 개수를 반환
 */
